/*!
 *
 * TenoxUI CSS Framework v0.4.2
 *
 * copyright (c) 2023 NOuSantx
 *
 * license: https://github.com/nousantx/tenoxui/blob/main/LICENSE
 *
 */
import property from"./lib/property.js";export let Classes=Object.keys(property).map((e=>`[class*="${e}-"]`));export let AllClasses=document.querySelectorAll(Classes.join(", "));class newProp{constructor(e,t){"string"==typeof e&&Array.isArray(t)?(this[e]=t,Classes.push(`[class*="${e}-"]`),AllClasses=document.querySelectorAll(Classes.join(", "))):console.warn("Invalid arguments for newProp. Please provide a string for name and an array for values.")}tryAdd(){this&&0!==Object.keys(this).length?Object.assign(property,this):console.warn("Invalid newProp instance:",this)}}export function addType(e,t){if("string"!=typeof e)throw new Error("Types must be a string");if(!Array.isArray(t))throw new Error("Property must be an array");new newProp(e,t).tryAdd()}class makeTenoxUI{constructor(e){this.element=e,this.styles=property}applyStyle(e,t,r){const s=this.styles[e];s&&s.forEach((s=>{if("filter"===s){const o=this.element.style[s];this.element.style[s]=o?`${o} ${e}(${t}${r})`:`${e}(${t}${r})`}else if("flex"===s)this.element.style[s]=`1 1 ${t}${r}`;else if("gridRow"===s||"gridColumn"===s||"gridRowStart"===s||"gridColumnStart"===s||"gridRowEnd"===s||"gridColumnEnd"===s)this.element.style[s]=`span ${t}${r}`;else if("grid-row"===e||"grid-col"===e)this.element.style[s]=`repeat(${t}${r}, 1fr)`;else if("auto-grid-row"===e||"auto-grid-col"===e)this.element.style[s]=`repeat(auto-fit, minmax(${t}${r}, 1fr))`;else if(t.startsWith("[")&&t.endsWith("]")){const e=t.slice(1,-1);this.element.style[s]=`var(--${e})`}else this.element.style[s]=`${t}${r}`}))}applyStyles(e){const t=e.match(/([a-zA-Z]+(?:-[a-zA-Z]+)*)-(-?(?:\d+(\.\d+)?)|(?:[a-zA-Z]+(?:-[a-zA-Z]+)*(?:-[a-zA-Z]+)*)|(?:\[[^\]]+\]))([a-zA-Z%]*)/);if(t){const e=t[1],r=t[2],s=t[4];this.applyStyle(e,r,s)}}applyMultiStyles(e){e.split(/\s+/).forEach((e=>{this.applyStyles(e)}))}}export function makeStyle(e,t){const r=(e,t)=>{new makeTenoxUI(e).applyMultiStyles(t)};if("string"==typeof t){document.querySelectorAll(e).forEach((e=>r(e,t)))}else"object"==typeof t?Object.entries(t).forEach((([e,t])=>{document.querySelectorAll(e).forEach((e=>r(e,t)))})):console.warn(`Invalid styles format for "${e}". Make sure you provide style correctly`)}export function defineProps(e){Object.entries(e).forEach((([e,t])=>{if(Array.isArray(t)){new newProp(e,t).tryAdd()}else console.warn(`Invalid property values for "${e}". Make sure you provide values as an array.`)}))}export function makeStyles(e){Object.entries(e).forEach((([e,t])=>{makeStyle(e,t)}))}export function moreColor(){const e=(e,t,r,s)=>{const o=e.className.match(t);o&&(e.style[r]=s(o))},t=document.querySelectorAll('[class*="bg-"], [class*="tc-"], [class*="border-"]'),r={bg:"background",tc:"color",border:"borderColor"},s={rgb:e=>`rgb(${e.slice(1,4).join(",")})`,rgba:e=>`rgba(${e.slice(1,5).join(",")})`,hex:e=>`#${e[1]}`};t.forEach((t=>{for(const o in r){for(const l in s){const n=new RegExp(`${o}-${l}\\(([^)]+)\\)`);e(t,n,r[o],s[l])}const l=new RegExp(`${o}-([0-9a-fA-F]{3,6})`);e(t,l,r[o],s.hex)}}))}export default function tenoxui(){AllClasses.forEach((e=>{const t=e.classList,r=new makeTenoxUI(e);t.forEach((e=>{r.applyStyles(e)}))}))}moreColor(),tenoxui();
//# sourceMappingURL=tui.esm.min.js.map