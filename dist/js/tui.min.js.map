/*!
 *
 * TenoxUI CSS Framework v0.4.11
 *
 * Copyright (c) 2023 NOuSantx
 *
 * License: https://github.com/nousantx/tenoxui/blob/main/LICENSE
 *
 */
let property={p:["padding"],pt:["paddingTop"],pb:["paddingBottom"],pr:["paddingRight"],pl:["paddingLeft"],ph:["paddingLeft","paddingRight"],pv:["paddingTop","paddingBottom"],m:["margin"],mt:["marginTop"],mb:["marginBottom"],mr:["marginRight"],ml:["marginLeft"],mv:["marginTop","marginBottom"],mh:["marginLeft","marginRight"],fs:["fontSize"],fw:["fontWeight"],lh:["lineHeight"],ls:["letterSpacing"],ta:["text-align"],tc:["color"],ts:["textStyle"],td:["textDecoration"],ti:["textIndent"],tn:["textReansform"],ws:["wordSpacing"],"text-style":["fontStyle"],"white-space":["whiteSpace"],position:["position"],post:["position"],z:["zIndex"],t:["top"],b:["bottom"],r:["right"],l:["left"],display:["display"],w:["width"],"w-mx":["maxWidth"],"w-mn":["minWidth"],h:["height"],"h-mx":["maxHeight"],"h-mn":["minHeight"],bg:["background"],"bg-size":["backgroundSize"],"bg-clip":["backgroundClip"],"bg-repeat":["backgroundRepeat"],"bg-loc":["backgroundPosition"],"bg-loc-x":["backgroundPositionX"],"bg-loc-y":["backgroundPositionY"],"bg-blend":["backgroundBlendMode"],fx:["flex"],"flex-parent":["justifyContent","alignItems"],fd:["flexDirection"],"fx-wrap":["flexWrap"],"item-order":["order"],"fx-basis":["flexBasis"],"fx-grow":["flexGrow"],"fx-shrink":["flexShrink"],"grid-row":["gridTemplateRows"],"grid-col":["gridTemplateColumns"],"auto-grid-row":["gridTemplateRows"],"auto-grid-col":["gridTemplateColumns"],"grid-item-row":["gridRow"],"grid-item-col":["gridColumn"],"grid-row-end":["gridRowEnd"],"grid-row-start":["gridRowStart"],"grid-col-end":["gridColumnEnd"],"grid-col-start":["gridColumnStart"],"grid-area":["gridArea"],"item-place":["placeArea"],"content-place":["placeContent"],gap:["gap"],"grid-gap":["gridGap"],"grid-row-gap":["gridRowGap"],"grid-col-gap":["gridColumnGap"],ac:["alignContent"],ai:["align-items"],as:["alignSelf"],jc:["justify-content"],ji:["justifyItems"],js:["justifySelf"],"backdrop-blur":["backdropFilter"],filter:["filter"],blur:["filter"],brightness:["filter"],contrast:["filter"],grayscale:["filter"],"hue-rotate":["filter"],saturate:["filter"],sepia:["filter"],opa:["opacity"],br:["borderRadius"],bw:["borderWidth"],"bw-left":["borderLeftWidth"],"bw-right":["borderRightWidth"],"bw-top":["borderTopWidth"],"bw-bottom":["borderBottomWidth"],bs:["borderStyle"],"radius-tl":["borderTopLeftRadius"],"radius-tr":["borderTopRightRadius"],"radius-bl":["borderBottomLeftRadius"],"radius-br":["borderBottomRightRadius"],"radius-top":["borderTopLeftRadius","borderTopRightRadius"],"radius-bottom":["borderBottomLeftRadius","borderBottomRightRadius"],"radius-left":["borderTopLeftRadius","borderBottomLeftRadius"],"radius-right":["borderTopRightRadius","borderBottomRightRadius"],curs:["cursor"],cursor:["cursor"],scale:["scale"],rt:["rotate"],over:["overflow"],overY:["overflowY"],overX:["overflowX"],float:["float"],ratio:["aspectRatio"],box:["width","height"],transition:["transition"],"tr-time":["transitionDuration"],"tr-prop":["transitionProperty"],"tr-timing":["transitionTimingFunction"],"tr-delay":["transitionDelay"]},Classes=Object.keys(property).map((t=>`[class*="${t}-"]`)),AllClasses=document.querySelectorAll(Classes.join(", "));class newProp{constructor(t,e){"string"==typeof t&&Array.isArray(e)?(this[t]=e,Classes.push(`[class*="${t}-"]`),AllClasses=document.querySelectorAll(Classes.join(", "))):console.warn("Invalid arguments for newProp. Please provide a string for name and an array for values.")}tryAdd(){this&&0!==Object.keys(this).length?Object.assign(property,this):console.warn("Invalid newProp instance:",this)}}function addType(t,e){if("string"!=typeof t)throw new Error("Types must be a string");if(!Array.isArray(e))throw new Error("Property must be an array");new newProp(t,e).tryAdd()}class makeTenoxUI{constructor(t){this.element=t,this.styles=property}applyStyle(t,e,r){const o=this.styles[t];o&&o.forEach((o=>{if("filter"===o){const i=this.element.style[o];this.element.style[o]=i?`${i} ${t}(${e}${r})`:`${t}(${e}${r})`}else if("flex"===o)this.element.style[o]=`1 1 ${e}${r}`;else if("gridRow"===o||"gridColumn"===o||"gridRowStart"===o||"gridColumnStart"===o||"gridRowEnd"===o||"gridColumnEnd"===o)this.element.style[o]=`span ${e}${r}`;else if("grid-row"===t||"grid-col"===t)this.element.style[o]=`repeat(${e}${r}, 1fr)`;else if("auto-grid-row"===t||"auto-grid-col"===t)this.element.style[o]=`repeat(auto-fit, minmax(${e}${r}, 1fr))`;else if(e.startsWith("[")&&e.endsWith("]")){const t=e.slice(1,-1);this.element.style[o]=`var(--${t})`}else this.element.style[o]=`${e}${r}`}))}applyStyles(t){const e=t.match(/([a-zA-Z]+(?:-[a-zA-Z]+)*)-(-?(?:\d+(\.\d+)?)|(?:[a-zA-Z]+(?:-[a-zA-Z]+)*(?:-[a-zA-Z]+)*)|(?:\[[^\]]+\]))([a-zA-Z%]*)/);if(e){const t=e[1],r=e[2],o=e[4];this.applyStyle(t,r,o)}}applyMultiStyles(t){t.split(/\s+/).forEach((t=>{this.applyStyles(t)}))}}function makeStyle(t,e){const r=(t,e)=>{new makeTenoxUI(t).applyMultiStyles(e)};if("string"==typeof e){document.querySelectorAll(t).forEach((t=>r(t,e)))}else"object"==typeof e?Object.entries(e).forEach((([t,e])=>{document.querySelectorAll(t).forEach((t=>r(t,e)))})):console.warn(`Invalid styles format for "${t}". Make sure you provide style correctly`)}function defineProps(t){Object.entries(t).forEach((([t,e])=>{if(Array.isArray(e)){new newProp(t,e).tryAdd()}else console.warn(`Invalid property values for "${t}". Make sure you provide values as an array.`)}))}function makeStyles(t){Object.entries(t).forEach((([t,e])=>{makeStyle(t,e)}))}function moreColor(){const t=(t,e,r,o)=>{const i=t.className.match(e);i&&(t.style[r]=o(i))},e=document.querySelectorAll('[class*="bg-"], [class*="tc-"], [class*="border-"]'),r={bg:"background",tc:"color",border:"borderColor"},o={rgb:t=>`rgb(${t.slice(1,4).join(",")})`,rgba:t=>`rgba(${t.slice(1,5).join(",")})`,hex:t=>`#${t[1]}`};e.forEach((e=>{for(const i in r){for(const a in o){const s=new RegExp(`${i}-${a}\\(([^)]+)\\)`);t(e,s,r[i],o[a])}const a=new RegExp(`${i}-([0-9a-fA-F]{3,6})`);t(e,a,r[i],o.hex)}}))}function tenoxui(){AllClasses.forEach((t=>{const e=t.classList,r=new makeTenoxUI(t);e.forEach((t=>{r.applyStyles(t)}))}))}moreColor(),tenoxui();
//# sourceMappingURL=tenoxui.min.js.map
